#=============================================================================
# .env_sample : docker-compose default environment
#
# Compose supports declaring default environment variables in a "dot-env" file
# that's placed in the DIR where docker-compose is to be executed. Docker uses
# these VARS for shell-style VAR substitution within 'docker-compose.yml'.
#
# USER-MODIFIED IMAGE BUILDER ENVIRONMENT VARIABLES
#
# This project uses the .env file to declare OpenWrt's Image Builder variables
# that get passed to the 'make image' command line in docker-compose.yml.
#
# http://openwrt.org/docs/guide-user/additional-software/imagebuilder
#=============================================================================

#-----------------------------------------------------------------------------
# CHOOSE OPENWRT IMAGE BUILDER
#
# The Image Builder is a pre-compiled environment suitable for creating custom
# images without the need for compiling them from source. It downloads pre-
# compiled packages and integrates them in a single flashable image.
#
# Doing so is useful if:
# 	- you want to fit more packages in a small flash size
# 	- you want to follow development snapshots
# 	- your device has 32MB or less RAM and opkg does not work properly
# 	- you want to mass-flash many devices and need a specific firmware setup
#
# The Image Builder images are not identical to official images as they obtain
# pre-generated packages. When recent/important changes are made, there can be
# some delay for these packages to propagate and it is best to check that
# packages were uploaded after the date of the imagebuilder/change.
#
# The VARS herein set which version of ImageBuilder to pull from Docker Hub.
# 	e.g: "openwrt/imagebuilder:${TARGET}-${SUBTARGET}-${RELEASE}"
#
# List of OpenWrt targets is online at:
# 	https://openwrt.org/docs/techref/targets/start
#-----------------------------------------------------------------------------

# Specifies the OpenWrt target (SoC model)
# 	e.g.: 'imx6', 'mediatek'
#
TARGET="bcm53xx"

# Specifies the OpenWrt subtarget (CPU architecture)
# 	e.g.: 'generic', 'mt7622'
#
SUBTARGET="generic"

# Specifies the OpenWrt release to build (version number)
# 	e.g.: '22.02.3', '22.03.02', '22.05-SNAPSHOT'
#
RELEASE="21.02.3"

#------------------------------------------------------------------------------
# 						-- Building OpenWrt Images --
#
# In the openwrt/imagebuilder Docker container, a 'make image' command will
# create a new firmware image with the default target profile and package set.
# You can use the following parameters to change that:
#-------------------------------------------------------------------------------

# Specifies the OpenWrt target image to build
#	e.g: 'netgear_r8000'
#
PROFILE="netgear_r8000"

# Specified packages to embed into the image. (Official builds just add 'luci')
# Best practice is only those needed to go online then rest upon first-boot.
# Enter a space-delimited list; can use '-' prefix to remove any base packages.
#	e.g.: '-ppp -ppp-mod-pppoe -luci-proto-ppp luci' to REMOVE ppp and ADDS luci
#
# Example 21.02.3 pkglist:
PACKAGES="luci luci-proto-modemmanager kmod-mii kmod-usb-net kmod-usb-net-cdc-ether kmod-usb-net-cdc-mbim kmod-usb-net-cdc-ncm kmod-usb-net-qmi-wwan kmod-usb-serial kmod-usb-serial-option kmod-usb-serial-qualcomm kmod-usb-serial-wwan kmod-usb-wdm usb-modeswitch iptables-mod-ipopt kmod-ipt-ipopt luci-app-wireguard luci-proto-wireguard kmod-wireguard qrencode wireguard-tools"

# Include all extra files from DIR into the new firmware image (merge DIR tree).
# Enter absolute path of the DIR (inside docker image).
#
FILES="/home/build/files"

# Alternative output directory for the images being built.
# Enter absolute path of the DIR (inside docker image).
#
BIN_DIR="/home/build/openwrt/bin"

# Suffix to append to the output image filename (sanitized).
# Enter a string excluding the dash '-'; it's added automatically after VERSION.
#	e.g.: 'custom' appends '-custom'
#
EXTRA_IMAGE_NAME=""

# Services in /etc/init.d/ to disable by default.
# Enter a space-delimited list of service names from /etc/init.d/
#	e.g.: 'dnsmask'
#
DISABLED_SERVICES=""

# Store locally generated signing key in the built image(s)?
# Enter numeric boolean (1 for TRUE; 2 for FALSE)
#
ADD_LOCAL_KEY=0

