#=============================================================================
# .env : docker-compose default environment
#
# Compose supports declaring default environment variables in a "dot-env" file
# that's placed in the DIR where docker-compose is to be executed. Docker uses
# these VARS for shell-style VAR substitution within 'docker-compose.yml'.
#
# This project uses the .env file to declare OpenWrt's Image Builder variables
# that get passed to the 'make image' command line in docker-compose.yml.
#
# The variables below are intended be user-modified prior to each image build.
#
#=============================================================================


#------------------------------------------------------------------------------
#  User-defined build image
#------------------------------------------------------------------------------
# The following variables are modified by the user for his/her specific device
# and the will be used to populate the variables used in docker-compose.yml.
#
# Output image file will be named as follows,
# 	e.g: "openwrt/imagebuilder:${TARGET}-${SUBTARGET}-${RELEASE}"


# --> Enter the OpenWrt profile name of device <--
#
PROFILE="netgear_r8000"

# --> Enter the OpenWrt target arch. of device <--
#
TARGET="bcm53xx"
SUBTARGET="generic"

# --> Enter the OpenWrt firmware ver. to build <--
#
#RELEASE="21.02.3"			# First build
#RELEASE="22.03-SNAPSHOT"	# Last build
RELEASE="22.03.0"


#-------------------------------------------------------------------------------
#  Customize build (optional arguments passed to the `make image` build command
#-------------------------------------------------------------------------------
#
# A list of packages to embed into the image. Official release adds only 'luci'.
# Probably best to limit to packages required to get online, then all others
# packages can download and install via custom post-install automation script.
# Enter a space-delimited list. Prefix with minus '-' to remove a base package.
#
# Packages for unknown versions
#PACKAGES="luci block-mount e2fsprogs fdisk kmod-fs-ext4 kmod-ipt-ipopt iptables-mod-ipopt kmod-usb-storage dmesg ip-full vim-fuller tcpdump-mini kmod-usb-net kmod-usb-net-cdc-ether kmod-mii kmod-usb-net-rndis usbutils kmod-wireguard wireguard-tools luci-app-wireguard luci-proto-wireguard tc-full luci-app-sqm sqm-scripts kmod-ipt-ipset ipset luci-app-nlbwmon nlbwmon"
#PACKAGES="-dnsmasq dnsmasq-full luci luci-app-wireguard luci-proto-modemmanager block-mount dmesg e2fsprogs fdisk kmod-usb-serial kmod-usb-serial-qualcomm kmod-usb-serial-wwan kmod-usb-storage kmod-usb-wdm usb-modeswitch usbids usbutils"
#PACKAGES="-ppp -ppp-mod-pppoe -luci-proto-ppp -kmod-ipv6 -ipv6only -ip6tables -kmod-ip6tables -odhcp6c -odhcpd-ipv6only -kmod-ipv6-odhcpd luci kmod-usb-net-rndis luci-app-wireguard"
#
# Pkglist for 22.03-SNAPSHOT
PACKAGES="luci block-mount e2fsprogs fdisk kmod-fs-ext4 dmesg luci-app-wireguard qrencode kmod-usb-net kmod-usb-net-cdc-ether kmod-mii kmod-usb-net-rndis kmod-usb-storage kmod-usb-storage-uas usb-modeswitch usbids usbutils"


# Directory containing your custom files to add to the image (e.g. scripts).
# Enter the absolute directory location as it is inside the docker image.
#
FILES="/home/build/files"


# Alternative output directory for the built images.
# Enter the absolute directory location as it is inside the docker image.
#
BIN_DIR="/home/build/openwrt/bin"


# Image name suffix used for output filename (sanitized).
# Do not include a dash '-' here, it will be added automatically after VERSION.
#
EXTRA_IMAGE_NAME=""


# Services from /etc/init.d to disable by default, e.g. "dhcp" for dnsmasq.
# Enter a space-delimited list.
#
DISABLE_SERVICES=""


# Store locally generated signing key in the built images.
# Enter a numeric boolean value (1 for TRUE; 2 for FALSE)
#
ADD_LOCAL_KEY=0


